🧭 SaaS Infra Diagnostic — snapshot at 2025-10-10T19:38:35+0300
==================================================

### Basic system info
Timestamp: 2025-10-10T19:38:35+0300
Darwin MacBook-Air-Fino.local 20.6.0 Darwin Kernel Version 20.6.0: Thu Jul  6 22:12:47 PDT 2023; root:xnu-7195.141.49.702.12~1/RELEASE_X86_64 x86_64

--- docker-compose ps ---
NAME                 COMMAND                  SERVICE             STATUS                PORTS
saasbot              "./entrypoint.sh pyt…"   bot                 running               0.0.0.0:8080->8080/tcp
saasbot_backup       "/bin/sh -c 'while t…"   backup              running               5432/tcp
saasbot_db           "docker-entrypoint.s…"   db                  running (healthy)     0.0.0.0:5432->5432/tcp
saasbot_grafana      "/run.sh"                grafana             running               0.0.0.0:3000->3000/tcp
saasbot_minio        "/usr/bin/docker-ent…"   minio               running (unhealthy)   0.0.0.0:9000-9001->9000-9001/tcp
saasbot_prometheus   "/bin/prometheus --c…"   prometheus          running               0.0.0.0:9090->9090/tcp
saasbot_redis        "docker-entrypoint.s…"   redis               running (healthy)     0.0.0.0:6379->6379/tcp
saasbot_test_db      "docker-entrypoint.s…"   test_db             running (healthy)     0.0.0.0:5433->5432/tcp
saasbot_worker       "./entrypoint.sh pyt…"   worker              running

--- docker system df ---
TYPE            TOTAL     ACTIVE    SIZE      RECLAIMABLE
Images          15        7         2.674GB   1.225GB (45%)
Containers      9         9         2.43MB    0B (0%)
Local Volumes   15        6         66.13MB   420.7kB (0%)
Build Cache     23        0         361.2MB   361.2MB

--- docker ps -a ---
NAMES                IMAGE                    STATUS                      PORTS
saasbot_grafana      grafana/grafana:11.2.0   Up 24 minutes               0.0.0.0:3000->3000/tcp
saasbot              saas_bot-bot             Up 24 minutes               0.0.0.0:8080->8080/tcp
saasbot_worker       saas_bot-worker          Up 24 minutes
saasbot_backup       postgres:15              Up 39 minutes               5432/tcp
saasbot_prometheus   prom/prometheus:latest   Up 40 minutes               0.0.0.0:9090->9090/tcp
saasbot_minio        minio/minio              Up 40 minutes (unhealthy)   0.0.0.0:9000-9001->9000-9001/tcp
saasbot_test_db      postgres:15              Up 40 minutes (healthy)     0.0.0.0:5433->5432/tcp
saasbot_redis        redis:7                  Up 40 minutes (healthy)     0.0.0.0:6379->6379/tcp
saasbot_db           postgres:15              Up 40 minutes (healthy)     0.0.0.0:5432->5432/tcp

--- docker volume ls ---
DRIVER    VOLUME NAME
local     2ee4978ef7182951c4282c508fc5399fde39abd26488b2a6d87610a187403ef4
local     55e5b32af97685f25f3e36cd4d7b9e9e46ed39ccb86f3b95d3e5aec3374e4ada
local     81e68be365bf1b248cae2360ac3bd2fae189714aee213cc99c8e743bd2b85a38
local     183d9d2ae8d6617ee7dab327ae293d5cf35b4663bdf5b828bcef0f469ca73b60
local     185e192da8bbbc85c75988aebbf0e75b7fe1e80cc1d3ff1f1927dea02d6cf96f
local     222fe813943389dfe086c5a8fef1e7b0ce38a5dea6547d5e79b831e6dea09c1f
local     437aef0b62b9f9ad8838ff265d2152271f2dcce031b27a3ddbdf56cb81805bd9
local     9356633793af2ad782980c4d85022beb4c10bb939c55b2299f169fd9d4139a99
local     bd9fafe333c16375080f7b81283d617ff60bb93e6aae50a8cedcca3b8ea3d1f5
local     ced3c7926d0a6c4316baabc2ca738c1b4231e047c755f389b6b4be5c51e892bd
local     d07d10da3c74203afc52a7aa85388ff5bdf931d5b4323ad034c288875fbed21a
local     e048c28b09ce0179e2914f042b97ed142b202fd8c2552dd8b9d9ad7440250d76
local     saas_bot_backups
local     saas_bot_minio_data
local     saas_bot_postgres_data

--- docker volume inspect (compose volumes) ---
Volume: 2ee4978ef7182951c4282c508fc5399fde39abd26488b2a6d87610a187403ef4
[
    {
        "CreatedAt": "2025-10-10T15:58:27Z",
        "Driver": "local",
        "Labels": null,
        "Mountpoint": "/var/lib/docker/volumes/2ee4978ef7182951c4282c508fc5399fde39abd26488b2a6d87610a187403ef4/_data",
        "Name": "2ee4978ef7182951c4282c508fc5399fde39abd26488b2a6d87610a187403ef4",
        "Options": null,
        "Scope": "local"
    }
]

Volume: 55e5b32af97685f25f3e36cd4d7b9e9e46ed39ccb86f3b95d3e5aec3374e4ada
[
    {
        "CreatedAt": "2025-10-10T15:01:17Z",
        "Driver": "local",
        "Labels": null,
        "Mountpoint": "/var/lib/docker/volumes/55e5b32af97685f25f3e36cd4d7b9e9e46ed39ccb86f3b95d3e5aec3374e4ada/_data",
        "Name": "55e5b32af97685f25f3e36cd4d7b9e9e46ed39ccb86f3b95d3e5aec3374e4ada",
        "Options": null,
        "Scope": "local"
    }
]

Volume: 81e68be365bf1b248cae2360ac3bd2fae189714aee213cc99c8e743bd2b85a38
[
    {
        "CreatedAt": "2025-10-10T14:33:47Z",
        "Driver": "local",
        "Labels": null,
        "Mountpoint": "/var/lib/docker/volumes/81e68be365bf1b248cae2360ac3bd2fae189714aee213cc99c8e743bd2b85a38/_data",
        "Name": "81e68be365bf1b248cae2360ac3bd2fae189714aee213cc99c8e743bd2b85a38",
        "Options": null,
        "Scope": "local"
    }
]

Volume: 183d9d2ae8d6617ee7dab327ae293d5cf35b4663bdf5b828bcef0f469ca73b60
[
    {
        "CreatedAt": "2025-10-10T15:10:46Z",
        "Driver": "local",
        "Labels": null,
        "Mountpoint": "/var/lib/docker/volumes/183d9d2ae8d6617ee7dab327ae293d5cf35b4663bdf5b828bcef0f469ca73b60/_data",
        "Name": "183d9d2ae8d6617ee7dab327ae293d5cf35b4663bdf5b828bcef0f469ca73b60",
        "Options": null,
        "Scope": "local"
    }
]

Volume: 185e192da8bbbc85c75988aebbf0e75b7fe1e80cc1d3ff1f1927dea02d6cf96f
[
    {
        "CreatedAt": "2025-10-10T15:19:29Z",
        "Driver": "local",
        "Labels": null,
        "Mountpoint": "/var/lib/docker/volumes/185e192da8bbbc85c75988aebbf0e75b7fe1e80cc1d3ff1f1927dea02d6cf96f/_data",
        "Name": "185e192da8bbbc85c75988aebbf0e75b7fe1e80cc1d3ff1f1927dea02d6cf96f",
        "Options": null,
        "Scope": "local"
    }
]

Volume: 222fe813943389dfe086c5a8fef1e7b0ce38a5dea6547d5e79b831e6dea09c1f
[
    {
        "CreatedAt": "2025-10-10T15:58:15Z",
        "Driver": "local",
        "Labels": null,
        "Mountpoint": "/var/lib/docker/volumes/222fe813943389dfe086c5a8fef1e7b0ce38a5dea6547d5e79b831e6dea09c1f/_data",
        "Name": "222fe813943389dfe086c5a8fef1e7b0ce38a5dea6547d5e79b831e6dea09c1f",
        "Options": null,
        "Scope": "local"
    }
]

Volume: 437aef0b62b9f9ad8838ff265d2152271f2dcce031b27a3ddbdf56cb81805bd9
[
    {
        "CreatedAt": "2025-10-10T15:58:01Z",
        "Driver": "local",
        "Labels": null,
        "Mountpoint": "/var/lib/docker/volumes/437aef0b62b9f9ad8838ff265d2152271f2dcce031b27a3ddbdf56cb81805bd9/_data",
        "Name": "437aef0b62b9f9ad8838ff265d2152271f2dcce031b27a3ddbdf56cb81805bd9",
        "Options": null,
        "Scope": "local"
    }
]

Volume: 9356633793af2ad782980c4d85022beb4c10bb939c55b2299f169fd9d4139a99
[
    {
        "CreatedAt": "2025-10-10T15:58:40Z",
        "Driver": "local",
        "Labels": null,
        "Mountpoint": "/var/lib/docker/volumes/9356633793af2ad782980c4d85022beb4c10bb939c55b2299f169fd9d4139a99/_data",
        "Name": "9356633793af2ad782980c4d85022beb4c10bb939c55b2299f169fd9d4139a99",
        "Options": null,
        "Scope": "local"
    }
]

Volume: bd9fafe333c16375080f7b81283d617ff60bb93e6aae50a8cedcca3b8ea3d1f5
[
    {
        "CreatedAt": "2025-10-10T15:19:17Z",
        "Driver": "local",
        "Labels": null,
        "Mountpoint": "/var/lib/docker/volumes/bd9fafe333c16375080f7b81283d617ff60bb93e6aae50a8cedcca3b8ea3d1f5/_data",
        "Name": "bd9fafe333c16375080f7b81283d617ff60bb93e6aae50a8cedcca3b8ea3d1f5",
        "Options": null,
        "Scope": "local"
    }
]

Volume: ced3c7926d0a6c4316baabc2ca738c1b4231e047c755f389b6b4be5c51e892bd
[
    {
        "CreatedAt": "2025-10-10T15:20:08Z",
        "Driver": "local",
        "Labels": null,
        "Mountpoint": "/var/lib/docker/volumes/ced3c7926d0a6c4316baabc2ca738c1b4231e047c755f389b6b4be5c51e892bd/_data",
        "Name": "ced3c7926d0a6c4316baabc2ca738c1b4231e047c755f389b6b4be5c51e892bd",
        "Options": null,
        "Scope": "local"
    }
]

Volume: d07d10da3c74203afc52a7aa85388ff5bdf931d5b4323ad034c288875fbed21a
[
    {
        "CreatedAt": "2025-10-10T15:01:17Z",
        "Driver": "local",
        "Labels": null,
        "Mountpoint": "/var/lib/docker/volumes/d07d10da3c74203afc52a7aa85388ff5bdf931d5b4323ad034c288875fbed21a/_data",
        "Name": "d07d10da3c74203afc52a7aa85388ff5bdf931d5b4323ad034c288875fbed21a",
        "Options": null,
        "Scope": "local"
    }
]

Volume: e048c28b09ce0179e2914f042b97ed142b202fd8c2552dd8b9d9ad7440250d76
[
    {
        "CreatedAt": "2025-10-10T15:58:27Z",
        "Driver": "local",
        "Labels": null,
        "Mountpoint": "/var/lib/docker/volumes/e048c28b09ce0179e2914f042b97ed142b202fd8c2552dd8b9d9ad7440250d76/_data",
        "Name": "e048c28b09ce0179e2914f042b97ed142b202fd8c2552dd8b9d9ad7440250d76",
        "Options": null,
        "Scope": "local"
    }
]

Volume: saas_bot_backups
[
    {
        "CreatedAt": "2025-10-10T15:01:16Z",
        "Driver": "local",
        "Labels": {
            "com.docker.compose.project": "saas_bot",
            "com.docker.compose.version": "2.13.0",
            "com.docker.compose.volume": "backups_data"
        },
        "Mountpoint": "/var/lib/docker/volumes/saas_bot_backups/_data",
        "Name": "saas_bot_backups",
        "Options": null,
        "Scope": "local"
    }
]

Volume: saas_bot_minio_data
[
    {
        "CreatedAt": "2025-10-10T14:35:03Z",
        "Driver": "local",
        "Labels": {
            "com.docker.compose.project": "saas_bot",
            "com.docker.compose.version": "2.13.0",
            "com.docker.compose.volume": "minio_data"
        },
        "Mountpoint": "/var/lib/docker/volumes/saas_bot_minio_data/_data",
        "Name": "saas_bot_minio_data",
        "Options": null,
        "Scope": "local"
    }
]

Volume: saas_bot_postgres_data
[
    {
        "CreatedAt": "2025-10-10T15:58:36Z",
        "Driver": "local",
        "Labels": {
            "com.docker.compose.project": "saas_bot",
            "com.docker.compose.version": "2.13.0",
            "com.docker.compose.volume": "postgres_data"
        },
        "Mountpoint": "/var/lib/docker/volumes/saas_bot_postgres_data/_data",
        "Name": "saas_bot_postgres_data",
        "Options": null,
        "Scope": "local"
    }
]

--- docker-compose config (if possible) ---
name: saas_bot
services:
  backup:
    container_name: saasbot_backup
    depends_on:
      db:
        condition: service_healthy
    entrypoint:
    - /bin/sh
    - -c
    - while true; do /backups/backup_db.sh; sleep 86400; done
    environment:
      ALLOW_MIGRATE_ON_PROD: "false"
      BACKUP_INTERVAL: "86400"
      BOT_TOKEN: dummy
      DATABASE_URL: postgresql+asyncpg://saasuser:saaspass@db:5432/saasdb
      HAWK_DSN: eyJpbnRlZ3JhdGlvbklkIjoiYWRmNDI3ZDktZTk0Zi00ZmRjLWFlYzgtMjQ2NWUyNzllNWEyIiwic2VjcmV0IjoiOWYzOWQ2MmUtYjcwNC00ZGEyLTg4YmEtZTc2YjdmNWJhNjEyIn0=
      POSTGRES_DB: saasdb
      POSTGRES_HOST: db
      POSTGRES_PASSWORD: saaspass
      POSTGRES_PORT: "5432"
      POSTGRES_USER: saasuser
      S3_ACCESS_KEY_ID: minioadmin
      S3_BUCKET_NAME: bot-files
      S3_ENDPOINT_URL: http://minio:9000
      S3_REGION: us-east-1
      S3_SECRET_ACCESS_KEY: minioadmin
      SYNC_DATABASE_URL: postgresql+psycopg2://saasuser:saaspass@db:5432/saasdb
    image: postgres:15
    networks:
      main_net: null
    restart: unless-stopped
    volumes:
    - type: bind
      source: /Users/fino/saas_bot/backups
      target: /backups
      bind:
        create_host_path: true
  bot:
    build:
      context: /Users/fino/saas_bot
      dockerfile: Dockerfile
    command:
    - python
    - main.py
    container_name: saasbot
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_started
      redis:
        condition: service_started
    environment:
      ALLOW_MIGRATE_ON_PROD: "false"
      BOT_TOKEN: 8399326242:AAFTGNluWI4fWitNcC37Mfe87MWD6UoeBOw
      DATABASE_URL: postgresql+asyncpg://saasuser:saaspass@db:5432/saasdb
      HAWK_DSN: eyJpbnRlZ3JhdGlvbklkIjoiYWRmNDI3ZDktZTk0Zi00ZmRjLWFlYzgtMjQ2NWUyNzllNWEyIiwic2VjcmV0IjoiOWYzOWQ2MmUtYjcwNC00ZGEyLTg4YmEtZTc2YjdmNWJhNjEyIn0=
      POSTGRES_DB: saasdb
      POSTGRES_HOST: db
      POSTGRES_PASSWORD: saaspass
      POSTGRES_PORT: "5432"
      POSTGRES_USER: saasuser
      PYTHONPATH: /app
      S3_ACCESS_KEY_ID: minioadmin
      S3_BUCKET_NAME: bot-files
      S3_ENDPOINT_URL: http://minio:9000
      S3_REGION: us-east-1
      S3_SECRET_ACCESS_KEY: minioadmin
      SYNC_DATABASE_URL: postgresql+psycopg2://saasuser:saaspass@db:5432/saasdb
    init: true
    networks:
      main_net: null
    ports:
    - mode: ingress
      target: 8080
      published: "8080"
      protocol: tcp
    restart: unless-stopped
    volumes:
    - type: bind
      source: /Users/fino/saas_bot/migrations
      target: /app/migrations
      bind:
        create_host_path: true
  db:
    container_name: saasbot_db
    environment:
      ALLOW_MIGRATE_ON_PROD: "false"
      BOT_TOKEN: dummy
      DATABASE_URL: postgresql+asyncpg://saasuser:saaspass@db:5432/saasdb
      HAWK_DSN: eyJpbnRlZ3JhdGlvbklkIjoiYWRmNDI3ZDktZTk0Zi00ZmRjLWFlYzgtMjQ2NWUyNzllNWEyIiwic2VjcmV0IjoiOWYzOWQ2MmUtYjcwNC00ZGEyLTg4YmEtZTc2YjdmNWJhNjEyIn0=
      POSTGRES_DB: saasdb
      POSTGRES_HOST: db
      POSTGRES_PASSWORD: saaspass
      POSTGRES_PORT: "5432"
      POSTGRES_USER: saasuser
      S3_ACCESS_KEY_ID: minioadmin
      S3_BUCKET_NAME: bot-files
      S3_ENDPOINT_URL: http://minio:9000
      S3_REGION: us-east-1
      S3_SECRET_ACCESS_KEY: minioadmin
      SYNC_DATABASE_URL: postgresql+psycopg2://saasuser:saaspass@db:5432/saasdb
    healthcheck:
      test:
      - CMD-SHELL
      - pg_isready -U saasuser -d saasdb
      timeout: 5s
      interval: 10s
      retries: 10
    image: postgres:15
    networks:
      main_net: null
    ports:
    - mode: ingress
      target: 5432
      published: "5432"
      protocol: tcp
    restart: unless-stopped
    volumes:
    - type: volume
      source: postgres_data
      target: /var/lib/postgresql/data
      volume: {}
    - type: volume
      source: backups_data
      target: /backups
      volume: {}
  grafana:
    container_name: saasbot_grafana
    depends_on:
      bot:
        condition: service_started
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_SECURITY_ADMIN_USER: admin
    image: grafana/grafana:11.2.0
    networks:
      main_net: null
    ports:
    - mode: ingress
      target: 3000
      published: "3000"
      protocol: tcp
    restart: unless-stopped
    volumes:
    - type: bind
      source: /Users/fino/saas_bot/grafana_data
      target: /var/lib/grafana
      bind:
        create_host_path: true
  minio:
    command:
    - server
    - /data
    - --console-address
    - :9001
    container_name: saasbot_minio
    environment:
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_ROOT_USER: minioadmin
    healthcheck:
      test:
      - CMD
      - curl
      - -f
      - http://minio:9000/minio/health/live || exit 1
      timeout: 5s
      interval: 10s
      retries: 5
    image: minio/minio
    networks:
      main_net: null
    ports:
    - mode: ingress
      target: 9000
      published: "9000"
      protocol: tcp
    - mode: ingress
      target: 9001
      published: "9001"
      protocol: tcp
    restart: unless-stopped
    volumes:
    - type: volume
      source: minio_data
      target: /data
      volume: {}
  prometheus:
    container_name: saasbot_prometheus
    image: prom/prometheus:latest
    networks:
      main_net: null
    ports:
    - mode: ingress
      target: 9090
      published: "9090"
      protocol: tcp
    restart: unless-stopped
    volumes:

--- Bot health endpoints ---
health: http://localhost:8080/healthz
metrics: http://localhost:8080/metrics
curl health (3s timeout):
OK
curl metrics (first 40 lines):
# HELP bot_requests_total Total bot requests handled
# TYPE bot_requests_total counter
# HELP bot_errors_total Total bot errors
# TYPE bot_errors_total counter
# HELP bot_latency_seconds Bot handler latency
# TYPE bot_latency_seconds histogram

--- Recent logs (last 200 lines) ---
--- logs: bot ---
saasbot  | 🚀 Starting main process: python main.py
saasbot  | 2025-10-10 16:14:05,023 - core.monitoring.hawk_setup - INFO - {"event": "\ud83e\udd85 Hawk initialized successfully (v3.4.1 API)", "timestamp": "2025-10-10T16:14:05.012773Z", "level": "info", "request_id": null, "user_id": null, "company_id": null}
saasbot  | 2025-10-10 16:14:05,029 - __main__ - INFO - {"event": "[BOOT] \u0417\u0430\u043f\u0443\u0441\u043a \u0431\u043e\u0442\u0430", "timestamp": "2025-10-10T16:14:05.028749Z", "level": "info", "request_id": null, "user_id": null, "company_id": null}
saasbot  | 2025-10-10 16:14:05,029 - __main__ - INFO - {"db_host": "db", "event": "[BOOT] DB host", "timestamp": "2025-10-10T16:14:05.029586Z", "level": "info", "request_id": null, "user_id": null, "company_id": null}
saasbot  | 2025-10-10 16:14:05,039 - __main__ - INFO - {"prefix": "839932", "event": "[BOOT] BOT_TOKEN (prefix only)", "timestamp": "2025-10-10T16:14:05.033204Z", "level": "info", "request_id": null, "user_id": null, "company_id": null}
saasbot  | 2025-10-10 16:14:05,040 - __main__ - INFO - {"event": "[INFO] \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445...", "timestamp": "2025-10-10T16:14:05.039691Z", "level": "info", "request_id": null, "user_id": null, "company_id": null}
saasbot  | 2025-10-10 16:14:05,835 - __main__ - INFO - {"event": "[INFO] \u0411\u0430\u0437\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u0433\u043e\u0442\u043e\u0432\u0430", "timestamp": "2025-10-10T16:14:05.834883Z", "level": "info", "request_id": null, "user_id": null, "company_id": null}
saasbot  | 2025-10-10 16:14:05,854 - services.seed - INFO - 🔄 Тариф синхронизирован: free | Free | 0$/мес | 30 дней
saasbot  | 2025-10-10 16:14:05,858 - services.seed - INFO - 🔄 Тариф синхронизирован: pro | Pro | 29$/мес | 30 дней
saasbot  | 2025-10-10 16:14:05,861 - services.seed - INFO - 🔄 Тариф синхронизирован: enterprise | Enterprise | 199$/мес | 365 дней
saasbot  | 2025-10-10 16:14:05,875 - services.seed - INFO - ✅ Синхронизация тарифов завершена (созданы/обновлены)
saasbot  | 2025-10-10 16:14:05,915 - __main__ - INFO - {"event": "[INFO] \u0411\u043e\u0442 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442\u0441\u044f...", "timestamp": "2025-10-10T16:14:05.915791Z", "level": "info", "request_id": null, "user_id": null, "company_id": null}
saasbot  | 2025-10-10 16:14:05,918 - aiogram.dispatcher - INFO - Start polling
saasbot  | 2025-10-10 16:14:06,017 - __main__ - INFO - {"event": "\ud83e\ude7a Health-check + Metrics \u0437\u0430\u043f\u0443\u0449\u0435\u043d\u044b \u043d\u0430 \u043f\u043e\u0440\u0442\u0443 8080", "timestamp": "2025-10-10T16:14:06.017403Z", "level": "info", "request_id": null, "user_id": null, "company_id": null}
saasbot  | 2025-10-10 16:14:06,017 - __main__ - INFO - {"event": "\ud83d\udfe2 Bot ready: healthz OK, metrics OK, polling starting\u2026", "timestamp": "2025-10-10T16:14:06.017708Z", "level": "info", "request_id": null, "user_id": null, "company_id": null}
saasbot  | 2025-10-10 16:14:07,271 - aiogram.dispatcher - INFO - Run polling for bot @stroybot_saas_bot id=8399326242 - 'СтройБот SaaS'
saasbot  | 2025-10-10 16:14:13,543 - aiohttp.access - INFO - 172.30.0.4 [10/Oct/2025:16:14:13 +0000] "GET /metrics HTTP/1.1" 200 382 "-" "Prometheus/3.6.0"
saasbot  | 2025-10-10 16:14:28,466 - aiohttp.access - INFO - 172.30.0.4 [10/Oct/2025:16:14:28 +0000] "GET /metrics HTTP/1.1" 200 382 "-" "Prometheus/3.6.0"

--- logs: db ---
saasbot_db  |
saasbot_db  | PostgreSQL Database directory appears to contain a database; Skipping initialization
saasbot_db  |
saasbot_db  | 2025-10-10 15:58:36.820 UTC [1] LOG:  starting PostgreSQL 15.14 (Debian 15.14-1.pgdg13+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 14.2.0-19) 14.2.0, 64-bit
saasbot_db  | 2025-10-10 15:58:36.828 UTC [1] LOG:  listening on IPv4 address "0.0.0.0", port 5432
saasbot_db  | 2025-10-10 15:58:36.828 UTC [1] LOG:  listening on IPv6 address "::", port 5432
saasbot_db  | 2025-10-10 15:58:36.852 UTC [1] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
saasbot_db  | 2025-10-10 15:58:36.898 UTC [29] LOG:  database system was shut down at 2025-10-10 15:58:16 UTC
saasbot_db  | 2025-10-10 15:58:36.977 UTC [1] LOG:  database system is ready to accept connections
saasbot_db  | 2025-10-10 16:03:36.541 UTC [27] LOG:  checkpoint starting: time
saasbot_db  | 2025-10-10 16:03:38.347 UTC [27] LOG:  checkpoint complete: wrote 20 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=1.774 s, sync=0.015 s, total=1.808 s; sync files=12, longest=0.010 s, average=0.002 s; distance=15 kB, estimate=15 kB
saasbot_db  | 2025-10-10 16:18:36.853 UTC [27] LOG:  checkpoint starting: time
saasbot_db  | 2025-10-10 16:18:37.097 UTC [27] LOG:  checkpoint complete: wrote 3 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.219 s, sync=0.006 s, total=0.245 s; sync files=3, longest=0.004 s, average=0.002 s; distance=1 kB, estimate=13 kB

--- logs: minio ---
saasbot_minio  | MinIO Object Storage Server
saasbot_minio  | Copyright: 2015-2025 MinIO, Inc.
saasbot_minio  | License: GNU AGPLv3 - https://www.gnu.org/licenses/agpl-3.0.html
saasbot_minio  | Version: RELEASE.2025-09-07T16-13-09Z (go1.24.6 linux/amd64)
saasbot_minio  |
saasbot_minio  | API: http://172.30.0.5:9000  http://127.0.0.1:9000
saasbot_minio  | WebUI: http://172.30.0.5:9001 http://127.0.0.1:9001
saasbot_minio  |
saasbot_minio  | Docs: https://docs.min.io
saasbot_minio  | WARN: Detected default credentials 'minioadmin:minioadmin', we recommend that you change these values with 'MINIO_ROOT_USER' and 'MINIO_ROOT_PASSWORD' environment variables

--- logs: redis ---
saasbot_redis  | 1:C 10 Oct 2025 15:58:35.630 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
saasbot_redis  | 1:C 10 Oct 2025 15:58:35.630 * Redis version=7.4.6, bits=64, commit=00000000, modified=0, pid=1, just started
saasbot_redis  | 1:C 10 Oct 2025 15:58:35.630 # Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf
saasbot_redis  | 1:M 10 Oct 2025 15:58:35.632 * monotonic clock: POSIX clock_gettime
saasbot_redis  | 1:M 10 Oct 2025 15:58:35.781 * Running mode=standalone, port=6379.
saasbot_redis  | 1:M 10 Oct 2025 15:58:35.834 * Server initialized
saasbot_redis  | 1:M 10 Oct 2025 15:58:35.838 * Ready to accept connections tcp

--- logs: test_db ---
saasbot_test_db  | 2025-10-10 16:04:11.806 UTC [321] FATAL:  database "saasdb" does not exist
saasbot_test_db  | 2025-10-10 16:04:21.959 UTC [330] FATAL:  database "saasdb" does not exist
saasbot_test_db  | 2025-10-10 16:18:40.868 UTC [995] FATAL:  database "saasdb" does not exist
saasbot_test_db  | 2025-10-10 16:18:51.075 UTC [1003] FATAL:  database "saasdb" does not exist
saasbot_test_db  | 2025-10-10 16:19:01.363 UTC [1011] FATAL:  database "saasdb" does not exist
saasbot_test_db  | 2025-10-10 16:36:50.445 UTC [1881] FATAL:  database "saasdb" does not exist
saasbot_test_db  | 2025-10-10 16:36:58.052 UTC [1891] FATAL:  database "saasuser" does not exist
saasbot_test_db  | 2025-10-10 16:37:00.698 UTC [1899] FATAL:  database "saasdb" does not exist
saasbot_test_db  | 2025-10-10 16:37:10.928 UTC [1907] FATAL:  database "saasdb" does not exist
s

--- logs: worker ---
saasbot_worker  | 🚀 Starting main process: python worker.py
saasbot_worker  | 2025-10-10 16:14:03,271 [INFO] worker: 🚀 Worker started
saasbot_worker  | 2025-10-10 16:14:05,240 [INFO] apscheduler.scheduler: Adding job tentatively -- it will be properly scheduled when the scheduler starts
saasbot_worker  | 2025-10-10 16:14:05,275 [INFO] apscheduler.scheduler: Added job "run_jobs" to job store "default"
saasbot_worker  | 2025-10-10 16:14:05,276 [INFO] apscheduler.scheduler: Scheduler started
saasbot_worker  | 2025-10-10 16:14:05,351 [ERROR] asyncio: Task exception was never retrieved
saasbot_worker  | future: <Task finished name='Task-3' coro=<run_jobs() done, defined at /app/worker.py:20> exception=TokenValidationError('Token is invalid!')>
saasbot_worker  | Traceback (most recent call last):
saasbot_worker  |   File "/app/worker.py", line 23, in run_jobs
saasbot_worker  |     bot = Bot(BOT_TOKEN)
saasbot_worker  |           ^^^^^^^^^^^^^^
saasbot_worker  |   File "/usr/local/lib/python3.12/site-packages/aiogram/client/bot.py", line 273, in __init__
saasbot_worker  |     validate_token(token)
saasbot_worker  |   File "/usr/local/lib/python3.12/site-packages/aiogram/utils/token.py", line 27, in validate_token
saasbot_worker  |     raise TokenValidationError("Token is invalid!")
saasbot_worker  | aiogram.utils.token.TokenValidationError: Token is invalid!

--- logs: grafana ---
saasbot_grafana  | logger=settings t=2025-10-10T16:13:45.63088197Z level=info msg="Starting Grafana" version=11.2.0 commit=2a88694fd3ced0335bf3726cc5d0adc2d1858855 branch=v11.2.x compiled=2025-10-10T16:13:45Z
saasbot_grafana  | logger=settings t=2025-10-10T16:13:45.645537147Z level=info msg="Config loaded from" file=/usr/share/grafana/conf/defaults.ini
saasbot_grafana  | logger=settings t=2025-10-10T16:13:45.648206762Z level=info msg="Config loaded from" file=/etc/grafana/grafana.ini
saasbot_grafana  | logger=settings t=2025-10-10T16:13:45.648376327Z level=info msg="Config overridden from command line" arg="default.paths.data=/var/lib/grafana"
saasbot_grafana  | logger=settings t=2025-10-10T16:13:45.6487247Z level=info msg="Config overridden from command line" arg="default.paths.logs=/var/log/grafana"
saasbot_grafana  | logger=settings t=2025-10-10T16:13:45.648748759Z level=info msg="Config overridden from command line" arg="default.paths.plugins=/var/lib/grafana/plugins"
saasbot_grafana  | logger=settings t=2025-10-10T16:13:45.648760446Z level=info msg="Config overridden from command line" arg="default.paths.provisioning=/etc/grafana/provisioning"
saasbot_grafana  | logger=settings t=2025-10-10T16:13:45.648768858Z level=info msg="Config overridden from command line" arg="default.log.mode=console"
saasbot_grafana  | logger=settings t=2025-10-10T16:13:45.648780025Z level=info msg="Config overridden from Environment variable" var="GF_PATHS_DATA=/var/lib/grafana"
saasbot_grafana  | logger=settings t=2025-10-10T16:13:45.648797437Z level=info msg="Config overridden from Environment variable" var="GF_PATHS_LOGS=/var/log/grafana"
saasbot_grafana  | logger=settings t=2025-10-10T16:13:45.649457389Z level=info msg="Config overridden from Environment variable" var="GF_PATHS_PLUGINS=/var/lib/grafana/plugins"
saasbot_grafana  | logger=settings t=2025-10-10T16:13:45.649470287Z level=info msg="Config overridden from Environment variable" var="GF_PATHS_PROVISIONING=/etc/grafana/provisioning"
saasbot_grafana  | logger=settings t=2025-10-10T16:13:45.649474675Z level=info msg="Config overridden from Environment variable" var="GF_SECURITY_ADMIN_USER=admin"
saasbot_grafana  | logger=settings t=2025-10-10T16:13:45.64948144Z level=info msg="Config overridden from Environment variable" var="GF_SECURITY_ADMIN_PASSWORD=*********"
saasbot_grafana  | logger=settings t=2025-10-10T16:13:45.649486656Z level=info msg=Target target=[all]
saasbot_grafana  | logger=settings t=2025-10-10T16:13:45.649503905Z level=info msg="Path Home" path=/usr/share/grafana
saasbot_grafana  | logger=settings t=2025-10-10T16:13:45.649509221Z level=info msg="Path Data" path=/var/lib/grafana
saasbot_grafana  | logger=settings t=2025-10-10T16:13:45.649514151Z level=info msg="Path Logs" path=/var/log/grafana
saasbot_grafana  | logger=settings t=2025-10-10T16:13:45.649518389Z level=info msg="Path Plugins" path=/var/lib/grafana/plugins
saasbot_grafana  | logger=settings t=2025-10-10T16:13:45.649523614Z level=info msg="Path Provisioning" path=/etc/grafana/provisioning
saasbot_grafana  | logger=settings t=2025-10-10T16:13:45.649630486Z level=info msg="App mode production"
saasbot_grafana  | logger=featuremgmt t=2025-10-10T16:13:45.654656658Z level=info msg=FeatureToggles panelMonitoring=true groupToNestedTableTransformation=true managedPluginsInstall=true recordedQueriesMulti=true influxdbBackendMigration=true alertingInsights=true lokiQueryHints=true tlsMemcached=true kubernetesPlaylists=true annotationPermissionUpdate=true logRowsPopoverMenu=true cloudWatchCrossAccountQuerying=true cloudWatchNewLabelParsing=true lokiMetricDataplane=true correlations=true cloudWatchRoundUpEndTime=true topnav=true nestedFolders=true prometheusMetricEncyclopedia=true ssoSettingsApi=true awsAsyncQueryCaching=true dataplaneFrontendFallback=true lokiStructuredMetadata=true prometheusDataplane=true addFieldFromCalculationStatFunctions=true formatString=true autoMigrateXYChartPanel=true alertingSimplifiedRouting=true dashgpt=true angularDeprecationUI=true alertingNoDataErrorExecution=true logsContextDatasourceUi=true exploreMetrics=true publicDashboards=true transformationsRedesign=true logsInfiniteScrolling=true recoveryThreshold=true prometheusAzureOverrideAudience=true prometheusConfigOverhaulAuth=true logsExploreTableVisualisation=true lokiQuerySplitting=true transformationsVariableSupport=true
saasbot_grafana  | logger=sqlstore t=2025-10-10T16:13:45.656005451Z level=info msg="Connecting to DB" dbtype=sqlite3
saasbot_grafana  | logger=migrator t=2025-10-10T16:13:45.785976352Z level=info msg="Locking database"
saasbot_grafana  | logger=migrator t=2025-10-10T16:13:45.786150985Z level=info msg="Starting DB migrations"
saasbot_grafana  | logger=migrator t=2025-10-10T16:13:45.940842625Z level=info msg="migrations completed" performed=0 skipped=594 duration=1.456544ms
saasbot_grafana  | logger=migrator t=2025-10-10T16:13:45.949065927Z level=info msg="Unlocking database"
saasbot_grafana  | logger=secrets t=2025-10-10T16:13:45.954925587Z level=info msg="Envelope encryption state" enabled=true currentprovider=secretKey.v1
saasbot_grafana  | logger=plugin.angulardetectorsprovider.dynamic t=2025-10-10T16:13:46.615425183Z level=info msg="Restored cache from database" duration=11.37075ms
saasbot_grafana  | logger=plugin.store t=2025-10-10T16:13:46.674334196Z level=info msg="Loading plugins..."
saasbot_grafana  | logger=plugins.registration t=2025-10-10T16:13:47.015057826Z level=error msg="Could not register plugin" pluginId=xychart error="plugin xychart is already registered"
saasbot_grafana  | logger=plugins.initialization t=2025-10-10T16:13:47.015135392Z level=error msg="Could not initialize plugin" pluginId=xychart error="plugin xychart is already registered"
saasbot_grafana  | logger=local.finder t=2025-10-10T16:13:47.01525326Z level=warn msg="Skipping finding plugins as directory does not exist" path=/usr/share/grafana/plugins-bundled
saasbot_grafana  | logger=plugin.store t=2025-10-10T16:13:47.015324197Z level=info msg="Plugins loaded" count=54 duration=340.992325ms
saasbot_grafana  | logger=query_data t=2025-10-10T16:13:47.040226115Z level=info msg="Query Service initialization"
saasbot_grafana  | logger=live.push_http t=2025-10-10T16:13:47.050904802Z level=info msg="Live Push Gateway initialization"
saasbot_grafana  | logger=ngalert.notifier.alertmanager org=1 t=2025-10-10T16:13:47.103592033Z level=info msg="Applying new configuration to Alertmanager" configHash=d2c56faca6af2a5772ff4253222f7386
saasbot_grafana  | logger=ngalert.state.manager t=2025-10-10T16:13:47.199309761Z level=info msg="Running in alternative execution of Error/NoData mode"
saasbot_grafana  | logger=infra.usagestats.collector t=2025-10-10T16:13:47.317956449Z level=info msg="registering usage stat providers" usageStatsProvidersLen=2
saasbot_grafana  | logger=provisioning.alerting t=2025-10-10T16:13:47.344682604Z level=info msg="starting to provision alerting"
saasbot_grafana  | logger=provisioning.alerting t=2025-10-10T16:13:47.34484715Z level=info msg="finished to provision alerting"
saasbot_grafana  | logger=http.server t=2025-10-10T16:13:47.409850543Z level=info msg="HTTP Server Listen" address=[::]:3000 protocol=http subUrl= socket=
saasbot_grafana  | logger=grafanaStorageLogger t=2025-10-10T16:13:47.410266694Z level=info msg="Storage starting"
saasbot_grafana  | logger=ngalert.state.manager t=2025-10-10T16:13:47.379045758Z level=info msg="Warming state cache for startup"
saasbot_grafana  | logger=ngalert.multiorg.alertmanager t=2025-10-10T16:13:47.580404724Z level=info msg="Starting MultiOrg Alertmanager"
saasbot_grafana  | logger=provisioning.dashboard t=2025-10-10T16:13:48.017513886Z level=info msg="starting to provision dashboards"
saasbot_grafana  | logger=provisioning.dashboard t=2025-10-10T16:13:48.017742381Z level=info msg="finished to provision dashboards"
saasbot_grafana  | logger=ngalert.state.manager t=2025-10-10T16:13:48.047507456Z level=info msg="State cache has been initialized" states=0 duration=668.457657ms
saasbot_grafana  | logger=ngalert.scheduler t=2025-10-10T16:13:48.049110381Z level=info msg="Starting scheduler" tickInterval=10s maxAttempts=1
saasbot_grafana  | logger=ticker t=2025-10-10T16:13:48.052282098Z level=info msg=starting first_tick=2025-10-10T16:13:50Z
saasbot_grafana  | logger=grafana.update.checker t=2025-10-10T16:13:49.848836857Z level=info msg="Update check succeeded" duration=2.412154661s
saasbot_grafana  | logger=plugins.update.checker t=2025-10-10T16:13:49.872814601Z level=info msg="Update check succeeded" duration=2.420168265s
saasbot_grafana  | logger=grafana-apiserver t=2025-10-10T16:13:50.471596013Z level=info msg="Adding GroupVersion playlist.grafana.app v0alpha1 to ResourceManager"
saasbot_grafana  | logger=grafana-apiserver t=2025-10-10T16:13:50.473242878Z level=info msg="Adding GroupVersion featuretoggle.grafana.app v0alpha1 to ResourceManager"
saasbot_grafana  | logger=infra.usagestats t=2025-10-10T16:14:21.53575976Z level=info msg="Usage stats are ready to report"
saasbot_grafana  | logger=cleanup t=2025-10-10T16:23:47.271363732Z level=info msg="Completed cleanup jobs" duration=166.758829ms
saasbot_grafana  | logger=plugins.update.checker t=2025-10-10T16:23:49.921686467Z level=info msg="Update check succeeded" duration=522.277327ms
saasbot_grafana  | logger=cleanup t=2025-10-10T16:33:46.804625546Z level=info msg="Completed cleanup jobs" duration=168.113409ms
saasbot_grafana  | logger=plugins.update.checker t=2025-10-10T16:33:49.513124909Z level=info msg="Update check succeeded" duration=579.25354ms

--- Backups folder ---
Backups dir: ./backups
total 112
-rw-r--r--@ 1 fino  staff   6,0K 10 окт 19:20 .DS_Store
-rwxr-xr-x  1 fino  staff   722B 10 окт 17:57 backup_db.sh
-rw-r--r--  1 fino  staff   5,2K 10 окт 15:22 backup_saasdb_20251009192453.sql.gz
-rw-r--r--@ 1 fino  staff   5,4K 10 окт 10:45 backup_saasdb_20251010074500.sql.gz
-rw-r--r--@ 1 fino  staff   5,3K 10 окт 11:54 backup_saasdb_20251010085420.sql.gz
-rw-r--r--  1 fino  staff   5,3K 10 окт 12:55 backup_saasdb_20251010095526.sql.gz
-rw-r--r--  1 fino  staff   5,6K 10 окт 18:58 backup_saasdb_20251010155852.sql.gz
-rwxr-xr-x  1 fino  staff   832B 10 окт 15:22 restore_db.sh

Latest backup: backup_saasdb_20251010155852.sql.gz

--- Postgres quick check ---
Postgres container: saasbot_test_db
psql: error: connection to server on socket "/var/run/postgresql/.s.PGSQL.5432" failed: FATAL:  database "saasuser" does not exist
psql query failed or DB not ready

--- Hawk (error tracking) diagnostics ---
Bot container: saasbot_grafana
BOT env vars (BOT_TOKEN/HAWK_TOKEN) inside container:

checking python hawkcatcher module inside bot container (dir listing / attr list):
No python or python3 interpreter found in container saasbot_grafana


--- Disk usage (host) ---
Filesystem       Size   Used  Avail Capacity iused      ifree %iused  Mounted on
/dev/disk1s1s1  113Gi   14Gi   31Gi    32%  553830 1182288650    0%   /
devfs           189Ki  189Ki    0Bi   100%     654          0  100%   /dev
/dev/disk1s4    113Gi  4.0Gi   31Gi    12%       5 1182842475    0%   /System/Volumes/VM
/dev/disk1s2    113Gi  271Mi   31Gi     1%     758 1182841722    0%   /System/Volumes/Preboot
/dev/disk1s6    113Gi  3.0Mi   31Gi     1%      16 1182842464    0%   /System/Volumes/Update
/dev/disk1s5    113Gi   62Gi   31Gi    67%  524957 1182317523    0%   /System/Volumes/Data
map auto_home     0Bi    0Bi    0Bi   100%       0          0  100%   /System/Volumes/Data/home

--- Summary Suggestions ---
Check the following in order if any statuses are not healthy:
1) MinIO marked unhealthy -> check free disk on host & MinIO volume.
2) If Postgres errors like 'No space left' -> investigate docker volume saas_bot_postgres_data and free host disk.
3) Hawk send_event missing -> check hawkcatcher version inside bot image; run 'docker exec -it <bot> python -c "import hawkcatcher; print(dir(hawkcatcher))"' and inspect requirements.txt
4) Backups: ensure backup script exists in /backups inside backup container and that host mounted backups folder is writable.
